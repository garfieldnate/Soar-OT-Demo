#source this file to use number comparisons instead of pointers


#create a heirarchy of violable constraints
sp {apply*initialize-CaseOT
   (state <s> ^operator <op>)
   (<op> ^name initialize-CaseOT)
-->
   (<s> ^tableau <t>
        ^name CaseOT)
   
   #"special" is for transitives, negatives, questions, etc.
   (<t> ^constraint <faith-lex-special>)
   (<t> ^constraint <*dat>)
   (<t> ^constraint <faith-lex>)
   (<t> ^constraint <*acc>)
   (<t> ^constraint <*nom>)
   
     #specify badness using a numeric value
   (<faith-lex-special> ^name faith-lex-special ^badness 5)
   (<*dat> ^name star-dat ^badness 4)
   (<faith-lex> ^name faith-lex ^badness 3)
   (<*acc> ^name star-acc ^badness 2)
   (<*nom> ^name star-nom ^badness 1)
}


#this is the production that executes the OT principles; it fills in the tableau and chooses the best operator
#it does so by comparing two operators at a time, preferring the one which has a higher violation
sp {CaseOT*searchControl*tableau*compare*operator
   (state <s> ^superstate nil
              ^tableau <t>
              ^operator <o1> +
              ^operator {<> <o1> <o2>} +)
   (<t>   ^constraint <c1>)
   (<o1> ^name choose-case)
   (<o2> ^name choose-case)
   #grab highest tableuax column with with different value for each operator
   #o1 violates something that o2 doesn't
   (<o1> ^violation <c1>)
   (<o2> -^violation <c1>)
   #o2 doesn't violate something that's worse than what anything o1 violated
  -{
   (<o2> ^violation <c2>)
   (<o1> -^violation <c2>)
   (<c1> ^badness <b>)
   (<c2> ^badness {> <b> <b2>})
}
-->
   (<s> ^operator <o2> > <o1>)
}

#since we are no longer using the ^worse-than relationship, we don't need this production, and it wouldn't match anyway.
excise elaborate*initialize-caseOT